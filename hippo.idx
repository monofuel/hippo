nimTitle	hippo	hippo.html	module src/hippo		0
nim	getHipPlatform	hippo.html#getHipPlatform	proc getHipPlatform(): string		5
nim	HippoRuntime	hippo.html#HippoRuntime	const HippoRuntime		25
nim	size_t	hippo.html#size_t	type size_t		5
nim	uint8_t	hippo.html#uint8_t	type uint8_t		6
nim	uint16_t	hippo.html#uint16_t	type uint16_t		7
nim	uint32_t	hippo.html#uint32_t	type uint32_t		8
nim	uint64_t	hippo.html#uint64_t	type uint64_t		9
nim	hipStream_t	hippo.html#hipStream_t	type hipStream_t		10
nim	hipError_t	hippo.html#hipError_t	type hipError_t		11
nim	hipMemcpyKind	hippo.html#hipMemcpyKind	enum hipMemcpyKind		14
nim	Dim3	hippo.html#Dim3	object Dim3		22
nim	BlockDim	hippo.html#BlockDim	object BlockDim		26
nim	BlockIdx	hippo.html#BlockIdx	object BlockIdx		30
nim	GridDim	hippo.html#GridDim	object GridDim		34
nim	ThreadIdx	hippo.html#ThreadIdx	object ThreadIdx		38
nim	newDim3	hippo.html#newDim3,uint32_t,uint32_t,uint32_t	proc newDim3(x: uint32_t = 1; y: uint32_t = 1; z: uint32_t = 1): Dim3		43
nim	hipMalloc	hippo.html#hipMalloc,ptr.pointer,cint	proc hipMalloc(ptr: ptr pointer; size: cint): hipError_t		48
nim	hipMemcpy	hippo.html#hipMemcpy,pointer,pointer,cint,hipMemcpyKind	proc hipMemcpy(dst: pointer; src: pointer; size: cint; kind: hipMemcpyKind): hipError_t		49
nim	hipFree	hippo.html#hipFree,pointer	proc hipFree(ptr: pointer): hipError_t		50
nim	hipLaunchKernel	hippo.html#hipLaunchKernel,pointer,Dim3,Dim3,ptr.pointer	proc hipLaunchKernel(function_address: pointer; numBlocks: Dim3; dimBlocks: Dim3;\n                args: ptr pointer): hipError_t		52
nim	hipDeviceSynchronize	hippo.html#hipDeviceSynchronize	proc hipDeviceSynchronize(): hipError_t		58
nim	hipLaunchKernelGGL	hippo.html#hipLaunchKernelGGL,proc,Dim3,Dim3,uint32_t,hipStream_t	proc hipLaunchKernelGGL(function_address: proc; numBlocks: Dim3; dimBlocks: Dim3;\n                   sharedMemBytes: uint32_t; stream: hipStream_t)		60
nim	ConstCString	hippo.html#ConstCString	object ConstCString		70
nim	toCString	hippo.html#toCString.c,ConstCString	converter toCString(self: ConstCString): cstring		71
nim	toConstCString	hippo.html#toConstCString.c,cstring	converter toConstCString(self: cstring): ConstCString		72
nim	`$`	hippo.html#$,ConstCString	proc `$`(self: ConstCString): string		73
nim	hipGetErrorString	hippo.html#hipGetErrorString,hipError_t	proc hipGetErrorString(err: hipError_t): ConstCString		74
nim	hipGetLastError	hippo.html#hipGetLastError	proc hipGetLastError(): hipError_t		75
nim	handleError	hippo.html#handleError,hipError_t	proc handleError(err: hipError_t)		78
nim	HippoStream	hippo.html#HippoStream	type HippoStream		84
nim	HippoError	hippo.html#HippoError	type HippoError		85
nim	HippoMemcpyKind	hippo.html#HippoMemcpyKind	type HippoMemcpyKind		86
nim	blockDim	hippo.html#blockDim_2	let blockDim		90
nim	blockIdx	hippo.html#blockIdx_2	let blockIdx		91
nim	gridDim	hippo.html#gridDim_2	let gridDim		92
nim	threadIdx	hippo.html#threadIdx_2	let threadIdx		93
nim	hippoGlobal	hippo.html#hippoGlobal.t,untyped	template hippoGlobal(body: untyped)		95
nim	hippoDevice	hippo.html#hippoDevice.t,typed	template hippoDevice(body: typed)		100
nim	hippoHost	hippo.html#hippoHost.t,typed	template hippoHost(body: typed)		105
nim	hippoMalloc	hippo.html#hippoMalloc.t,int	template hippoMalloc(size: int): pointer		56
nim	hippoMemcpy	hippo.html#hippoMemcpy.t,pointer,pointer,int,hipMemcpyKind	template hippoMemcpy(dst: pointer; src: pointer; size: int; kind: HippoMemcpyKind)		65
nim	hippoFree	hippo.html#hippoFree.t,pointer	template hippoFree(p: pointer)		72
nim	launchKernel	hippo.html#launchKernel,proc,Dim3,Dim3,uint32,HippoStream,	proc launchKernel(kernel: proc; gridDim: Dim3 = newDim3(1, 1, 1);\n             blockDim: Dim3 = newDim3(1, 1, 1); sharedMemBytes: uint32 = 0;\n             stream: HippoStream = nil; args: tuple): HippoError		82
nim	hippoLaunchKernel	hippo.html#hippoLaunchKernel.t,proc,Dim3,Dim3,uint32,HippoStream,	template hippoLaunchKernel(kernel: proc; gridDim: Dim3 = newDim3(1, 1, 1);\n                  blockDim: Dim3 = newDim3(1, 1, 1); sharedMemBytes: uint32 = 0;\n                  stream: HippoStream = nil; args: tuple)		154
