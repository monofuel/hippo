nimTitle	hippo	hippo.html	module src/hippo		0
nim	HippoRuntime	hippo.html#HippoRuntime	const HippoRuntime		6
nim	size_t	hippo.html#size_t	type size_t		5
nim	uint8_t	hippo.html#uint8_t	type uint8_t		6
nim	uint16_t	hippo.html#uint16_t	type uint16_t		7
nim	uint32_t	hippo.html#uint32_t	type uint32_t		8
nim	uint64_t	hippo.html#uint64_t	type uint64_t		9
nim	hipStream_t	hippo.html#hipStream_t	type hipStream_t		10
nim	hipError_t	hippo.html#hipError_t	type hipError_t		11
nim	hipMemcpyKind	hippo.html#hipMemcpyKind	enum hipMemcpyKind		14
nim	Dim3	hippo.html#Dim3	object Dim3		22
nim	BlockDim	hippo.html#BlockDim	object BlockDim		26
nim	BlockIdx	hippo.html#BlockIdx	object BlockIdx		30
nim	GridDim	hippo.html#GridDim	object GridDim		34
nim	ThreadIdx	hippo.html#ThreadIdx	object ThreadIdx		38
nim	newDim3	hippo.html#newDim3,uint32_t,uint32_t,uint32_t	proc newDim3(x: uint32_t = 1; y: uint32_t = 1; z: uint32_t = 1): Dim3		43
nim	hipMalloc	hippo.html#hipMalloc,ptr.pointer,cint	proc hipMalloc(ptr: ptr pointer; size: cint): hipError_t		48
nim	hipMemcpy	hippo.html#hipMemcpy,pointer,pointer,cint,hipMemcpyKind	proc hipMemcpy(dst: pointer; src: pointer; size: cint; kind: hipMemcpyKind): hipError_t		49
nim	hipFree	hippo.html#hipFree,pointer	proc hipFree(ptr: pointer): hipError_t		50
nim	hipLaunchKernel	hippo.html#hipLaunchKernel,pointer,Dim3,Dim3,ptr.pointer	proc hipLaunchKernel(function_address: pointer; numBlocks: Dim3; dimBlocks: Dim3;\n                args: ptr pointer): hipError_t		52
nim	hipLaunchKernel	hippo.html#hipLaunchKernel,pointer,Dim3,Dim3,ptr.pointer,csize_t,hipStream_t	proc hipLaunchKernel(function_address: pointer; numBlocks: Dim3; dimBlocks: Dim3;\n                args: ptr pointer; sharedMemBytes: csize_t; stream: hipStream_t): cint		55
nim	hipDeviceSynchronize	hippo.html#hipDeviceSynchronize	proc hipDeviceSynchronize(): hipError_t		58
nim	hipSyncthreads	hippo.html#hipSyncthreads	proc hipSyncthreads()		59
nim	hippoSyncthreads	hippo.html#hippoSyncthreads	proc hippoSyncthreads()		60
nim	hipLaunchKernelGGL	hippo.html#hipLaunchKernelGGL,proc,Dim3,Dim3,uint32_t,hipStream_t	proc hipLaunchKernelGGL(function_address: proc; numBlocks: Dim3; dimBlocks: Dim3;\n                   sharedMemBytes: uint32_t; stream: hipStream_t)		62
nim	ConstCString	hippo.html#ConstCString	object ConstCString		71
nim	toCString	hippo.html#toCString.c,ConstCString	converter toCString(self: ConstCString): cstring		72
nim	toConstCString	hippo.html#toConstCString.c,cstring	converter toConstCString(self: cstring): ConstCString		73
nim	`$`	hippo.html#$,ConstCString	proc `$`(self: ConstCString): string		74
nim	hipGetErrorString	hippo.html#hipGetErrorString,hipError_t	proc hipGetErrorString(err: hipError_t): ConstCString		75
nim	hipGetLastError	hippo.html#hipGetLastError	proc hipGetLastError(): hipError_t		76
nim	handleError	hippo.html#handleError,hipError_t	proc handleError(err: hipError_t)		79
nim	HippoStream	hippo.html#HippoStream	type HippoStream		85
nim	HippoError	hippo.html#HippoError	type HippoError		86
nim	HippoMemcpyKind	hippo.html#HippoMemcpyKind	type HippoMemcpyKind		87
nim	HippoMemcpyHostToHost	hippo.html#HippoMemcpyHostToHost	const HippoMemcpyHostToHost		90
nim	HippoMemcpyHostToDevice	hippo.html#HippoMemcpyHostToDevice	const HippoMemcpyHostToDevice		91
nim	HippoMemcpyDeviceToHost	hippo.html#HippoMemcpyDeviceToHost	const HippoMemcpyDeviceToHost		92
nim	HippoMemcpyDeviceToDevice	hippo.html#HippoMemcpyDeviceToDevice	const HippoMemcpyDeviceToDevice		93
nim	HippoMemcpyDefault	hippo.html#HippoMemcpyDefault	const HippoMemcpyDefault		94
nim	blockDim	hippo.html#blockDim_2	let blockDim		98
nim	blockIdx	hippo.html#blockIdx_2	let blockIdx		99
nim	gridDim	hippo.html#gridDim_2	let gridDim		100
nim	threadIdx	hippo.html#threadIdx_2	let threadIdx		101
nim	hippoMalloc	hippo.html#hippoMalloc.t,int	template hippoMalloc(size: int): GpuRef		91
nim	hippoMemcpy	hippo.html#hippoMemcpy.t,pointer,pointer,int,hipMemcpyKind	template hippoMemcpy(dst: pointer; src: pointer; size: int; kind: HippoMemcpyKind)		104
nim	hippoMemcpy	hippo.html#hippoMemcpy.t,pointer,GpuRef,int,hipMemcpyKind	template hippoMemcpy(dst: pointer; src: GpuRef; size: int; kind: HippoMemcpyKind)		115
nim	hippoMemcpy	hippo.html#hippoMemcpy.t,GpuRef,pointer,int,hipMemcpyKind	template hippoMemcpy(dst: GpuRef; src: pointer; size: int; kind: HippoMemcpyKind)		125
nim	hippoMemcpy	hippo.html#hippoMemcpy.t,GpuRef,GpuRef,int,hipMemcpyKind	template hippoMemcpy(dst: GpuRef; src: GpuRef; size: int; kind: HippoMemcpyKind)		135
nim	hippoFree	hippo.html#hippoFree.t,pointer	template hippoFree(p: pointer)		145
nim	hippoSynchronize	hippo.html#hippoSynchronize.t	template hippoSynchronize()		154
nim	`=destroy`	hippo.html#=destroy,GpuMemory	proc `=destroy`(mem: var GpuMemory)		164
nim	hippoLaunchKernel	hippo.html#hippoLaunchKernel.t,proc,Dim3,Dim3,uint32,HippoStream,untyped	template hippoLaunchKernel(kernel: proc; ## The GPU kernel procedure to launch\n                  gridDim: Dim3 = newDim3(1, 1, 1); ## default to a grid of 1 block\n                  blockDim: Dim3 = newDim3(1, 1, 1); ## default to 1 thread per block\n                  sharedMemBytes: uint32 = 0; ## dynamic shared memory amount to allocate\n                  stream: HippoStream = nil; ## Which device stream to run under (defaults to null)\n                  args: untyped)		214
nim	hippoGlobal	hippo.html#hippoGlobal.m,untyped	macro hippoGlobal(fn: untyped): untyped		271
nim	hippoDevice	hippo.html#hippoDevice.m,untyped	macro hippoDevice(fn: untyped): untyped		284
nim	hippoHost	hippo.html#hippoHost.m,untyped	macro hippoHost(fn: untyped): untyped		299
nim	hippoHostDevice	hippo.html#hippoHostDevice.m,untyped	macro hippoHostDevice(fn: untyped): untyped		313
nim	hippoShared	hippo.html#hippoShared.m,untyped	macro hippoShared(v: untyped): untyped		328
nim	hippoConstant	hippo.html#hippoConstant.m,untyped	macro hippoConstant(v: untyped): untyped		343
nim	hippoArgs	hippo.html#hippoArgs.m,varargs[untyped]	macro hippoArgs(args: varargs[untyped]): untyped		360
nimgrp	hiplaunchkernel	hippo.html#hipLaunchKernel-procs-all	proc		52
nimgrp	hippomemcpy	hippo.html#hippoMemcpy-templates-all	template		104
